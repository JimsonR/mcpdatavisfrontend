// Test markdown content that simulates streaming structured agent output

export const testStreamingContent = `
## ðŸ¤” Thinking (Step 1)

I need to create a visualization of the sales data to show trends over time.

<details>
<summary>ðŸ”§ <strong>Tool: create_visualization</strong> âœ…</summary>

**Arguments:**
\`\`\`json
{
  "df_name": "sales_data",
  "plot_type": "line",
  "x": "Date",
  "y": "Sales",
  "title": "Sales Trends Over Time"
}
\`\`\`

**Result:**
\`\`\`json
{
  "type": "line",
  "points": [
    {"x": "Jan", "y": 12500},
    {"x": "Feb", "y": 15600},
    {"x": "Mar", "y": 13200},
    {"x": "Apr", "y": 18900},
    {"x": "May", "y": 16800},
    {"x": "Jun", "y": 21300}
  ],
  "title": "Sales Over Time",
  "x_label": "Month",
  "y_label": "Sales ($)"
}
\`\`\`

</details>

## ðŸŽ¯ Final Answer

I've analyzed your sales data and created a line chart showing the trends over time. The visualization reveals:

- **Overall Growth**: Sales increased from $12,500 in January to $21,300 in June
- **Peak Performance**: The highest sales were recorded in June ($21,300)
- **Notable Dip**: There was a decrease in March ($13,200) before strong recovery
- **Strong Finish**: April through June showed consistent high performance

The chart clearly demonstrates positive sales momentum throughout the period.
`;

export const testBarChartContent = `
<details>
<summary>ðŸ”§ <strong>Tool: create_visualization</strong> âœ…</summary>

**Arguments:**
\`\`\`json
{
  "df_name": "sales_data",
  "plot_type": "bar",
  "x": "Product",
  "y": "Sales",
  "title": "Sales by Product"
}
\`\`\`

**Result:**
\`\`\`json
{
  "type": "bar",
  "bars": [
    {"label": "Product A", "value": 15000},
    {"label": "Product B", "value": 22000},
    {"label": "Product C", "value": 18000},
    {"label": "Product D", "value": 12000}
  ],
  "title": "Sales by Product",
  "x_label": "Product",
  "y_label": "Sales ($)"
}
\`\`\`

</details>
`;

console.log("Test content created for streaming structured agent mode");
console.log(
  "This simulates the exact format that would be generated by the streaming backend"
);
